---
import { languages, defaultLang } from '../../i18n/config';

// Get current language from localStorage or default to French
const currentLang = defaultLang;
---

<div class="relative group">
  <!-- Current Language Button -->
  <button
    class="flex items-center gap-2 px-4 py-2 bg-secondary-800/50 hover:bg-secondary-700/50 border border-secondary-600/30 hover:border-primary-500/50 rounded-lg text-secondary-300 hover:text-white transition-all duration-300 group-hover:border-primary-400"
    aria-label="Changer de langue"
    id="language-selector-btn"
  >
    <!-- Flag Icon -->
    <div class="w-5 h-5 rounded-full overflow-hidden border border-secondary-500/30">
      <img
        src={`/images/flags/${currentLang}.svg`}
        alt={`Drapeau ${languages[currentLang]}`}
        class="w-full h-full object-cover"
        onerror="this.src='/images/flags/default.svg'"
      />
    </div>

    <!-- Language Name -->
    <span class="text-sm font-medium hidden sm:block" id="current-language-name">
      {languages[currentLang]}
    </span>

    <!-- Dropdown Arrow -->
    <svg
      class="w-4 h-4 transition-transform duration-300 group-hover:rotate-180"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
    </svg>
  </button>

  <!-- Dropdown Menu -->
  <div class="absolute right-0 top-full mt-2 w-48 bg-secondary-800 border border-secondary-600 rounded-lg shadow-xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50 backdrop-blur-sm">
    <div class="py-2">
      <!-- All Languages Including French -->
      {Object.entries(languages).map(([code, name]) => (
        <button
          class="w-full flex items-center gap-3 px-4 py-3 text-sm text-secondary-300 hover:text-white hover:bg-primary-500/20 transition-all duration-200 group/item language-option"
          data-lang={code}
        >
          <!-- Flag -->
          <div class="w-4 h-4 rounded-full overflow-hidden border border-secondary-500/30">
            <img
              src={`/images/flags/${code}.svg`}
              alt={`Drapeau ${name}`}
              class="w-full h-full object-cover"
              onerror="this.src='/images/flags/default.svg'"
            />
          </div>

          <!-- Language Name -->
          <span class="font-medium">{name}</span>

          <!-- Current Language Indicator -->
          {code === currentLang && (
            <span class="ml-auto text-xs text-primary-400">‚úì</span>
          )}

          <!-- Hover Arrow -->
          <svg
            class="w-3 h-3 ml-auto opacity-0 group-hover/item:opacity-100 transition-all duration-200 transform translate-x-1 group-hover/item:translate-x-0"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      ))}
    </div>

    <!-- Footer -->
    <div class="px-4 py-2 border-t border-secondary-600/30 bg-secondary-900/30">
      <p class="text-xs text-secondary-400 text-center">
        üåç {Object.keys(languages).length} langues disponibles
      </p>
    </div>
  </div>
</div>

<script>
  // Gestion du changement de langue avec traduction automatique
  document.addEventListener('DOMContentLoaded', () => {
    const languageOptions = document.querySelectorAll('.language-option');
    const currentLanguageName = document.getElementById('current-language-name');
    const currentLanguageFlag = document.querySelector('#language-selector-btn img');

    // R√©cup√©rer la langue actuelle depuis localStorage
    let currentLang = localStorage.getItem('selectedLanguage') || 'fr';

    // Mettre √† jour l'affichage
    function updateLanguageDisplay(lang) {
      const langNames = {
        'fr': 'Fran√ßais',
        'en': 'English',
        'de': 'Deutsch',
        'it': 'Italiano',
        'pt': 'Portugu√™s',
        'es': 'Espa√±ol',
        'nl': 'Nederlands'
      };

      if (currentLanguageName) {
        currentLanguageName.textContent = langNames[lang] || langNames['fr'];
      }

      if (currentLanguageFlag) {
        currentLanguageFlag.src = `/images/flags/${lang}.svg`;
        currentLanguageFlag.onerror = function() {
          this.src = '/images/flags/default.svg';
        };
      }

      // Sauvegarder dans localStorage
      localStorage.setItem('selectedLanguage', lang);

      // D√©clencher l'√©v√©nement de changement de langue
      window.dispatchEvent(new CustomEvent('languageChanged', { 
        detail: { language: lang } 
      }));
    }

    // G√©rer les clics sur les options de langue
    languageOptions.forEach(option => {
      option.addEventListener('click', () => {
        const selectedLang = option.getAttribute('data-lang');
        currentLang = selectedLang;
        updateLanguageDisplay(selectedLang);

        // Fermer le dropdown
        const dropdown = option.closest('.group');
        if (dropdown) {
          dropdown.classList.remove('group-hover:opacity-100', 'group-hover:visible');
        }
      });
    });

    // Initialiser l'affichage
    updateLanguageDisplay(currentLang);
  });
</script>

<style>
  /* Custom flag fallback */
  .language-selector img[src*="default.svg"] {
    background: linear-gradient(45deg, #374151, #4b5563);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 8px;
    font-weight: bold;
  }

  /* Animation pour le changement de langue */
  .language-option:active {
    transform: scale(0.95);
  }
</style>
