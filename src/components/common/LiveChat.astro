---
// Live Chat component with AI responses
---

<!-- Live Chat Widget -->
<div id="live-chat-widget" class="fixed bottom-6 right-6 z-50">
  <!-- Chat Toggle Button -->
  <button id="chat-toggle" class="group relative w-16 h-16 bg-gradient-to-r from-primary-500 to-sensual-500 rounded-full shadow-2xl hover:shadow-primary-500/50 transition-all duration-500 hover:scale-110 hover:rotate-3">
    <!-- Animated background -->
    <div class="absolute inset-0 rounded-full bg-gradient-to-r from-primary-400 to-sensual-400 opacity-0 group-hover:opacity-100 transition-opacity duration-500 animate-pulse"></div>
    
    <!-- Main content -->
    <div class="relative z-10 flex items-center justify-center">
      <span class="text-white text-2xl group-hover:scale-110 transition-transform duration-300">ðŸ’¬</span>
    </div>
    
    <!-- Notification dot -->
    <div class="absolute -top-2 -right-2 w-5 h-5 bg-red-500 rounded-full animate-ping border-2 border-white"></div>
    
    <!-- Tooltip -->
    <div class="absolute bottom-full right-0 mb-3 px-3 py-2 bg-black/90 text-white text-sm rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300 whitespace-nowrap">
      <span class="font-medium" data-translate="Chat en Direct">Chat en Direct</span>
      <div class="absolute top-full right-4 w-0 h-0 border-l-4 border-l-black/90 border-t-4 border-t-transparent border-b-4 border-b-transparent"></div>
    </div>
  </button>
  
  <!-- Chat Window -->
  <div id="chat-window" class="hidden absolute bottom-20 right-0 w-96 h-96 bg-secondary-800 border border-secondary-600 rounded-lg shadow-2xl">
    <!-- Chat Header -->
    <div class="bg-gradient-to-r from-primary-600 to-sensual-600 p-4 rounded-t-lg">
      <div class="flex items-center justify-between mb-3">
        <div class="flex items-center gap-3">
          <div class="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center">
            <span class="text-white text-lg">ðŸ’¬</span>
          </div>
          <div>
            <h3 class="text-white font-semibold" data-translate="Chat en Direct">Chat en Direct</h3>
            <p class="text-primary-100 text-xs" data-translate="Support disponible 24/7">Support disponible 24/7</p>
          </div>
        </div>
        <button id="chat-close" class="text-white hover:text-secondary-200 transition-colors p-1 rounded-full hover:bg-white/10">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <!-- Agent Profile -->
      <div class="flex items-center gap-3 p-3 bg-white/10 rounded-lg">
        <div class="w-12 h-12 rounded-full overflow-hidden border-2 border-white/30">
          <img src="/images/team/Agentchat.png" alt="Agent de Support" class="w-full h-full object-cover" />
        </div>
        <div class="flex-1">
          <p class="text-white font-medium text-sm" data-translate="Sarah, votre assistante">Sarah, votre assistante</p>
          <div class="flex items-center gap-1">
            <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
            <span class="text-primary-100 text-xs" data-translate="En ligne">En ligne</span>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Chat Messages -->
    <div id="chat-messages" class="h-64 overflow-y-auto p-4 space-y-4">
      <!-- Welcome Message -->
      <div class="flex items-start gap-3">
        <div class="w-8 h-8 rounded-full overflow-hidden border-2 border-primary-400 flex-shrink-0">
          <img src="/images/team/Agentchat.png" alt="Sarah" class="w-full h-full object-cover" />
        </div>
        <div class="bg-gradient-to-r from-primary-500 to-primary-600 rounded-2xl rounded-tl-md p-4 max-w-xs shadow-lg">
          <p class="text-white text-sm leading-relaxed" data-translate="Bonjour ! Je suis Sarah, votre assistante personnelle. Comment puis-je vous aider aujourd'hui ? ðŸ˜Š">
            Bonjour ! Je suis Sarah, votre assistante personnelle. Comment puis-je vous aider aujourd'hui ? ðŸ˜Š
          </p>
          <div class="text-xs text-primary-100 mt-2 opacity-75" data-translate="Maintenant">Maintenant</div>
        </div>
      </div>
    </div>
    
    <!-- Chat Input -->
    <div class="p-4 border-t border-secondary-600 bg-secondary-800/50">
      <div class="flex gap-3">
        <div class="flex-1 relative">
          <input 
            type="text" 
            id="chat-input" 
            placeholder="Tapez votre message..." 
            class="w-full px-4 py-3 bg-secondary-700 border border-secondary-600 rounded-2xl text-white placeholder-secondary-400 focus:outline-none focus:border-primary-400 focus:ring-2 focus:ring-primary-400/20 transition-all duration-200"
            data-translate="Tapez votre message..."
          >
          <div class="absolute right-3 top-1/2 -translate-y-1/2 text-secondary-400">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
        </div>
        <button 
          id="chat-send" 
          class="px-6 py-3 bg-gradient-to-r from-primary-500 to-sensual-500 hover:from-primary-600 hover:to-sensual-600 rounded-2xl text-white font-medium transition-all duration-200 hover:scale-105 shadow-lg hover:shadow-primary-500/25 flex items-center gap-2"
        >
          <span data-translate="Envoyer">Envoyer</span>
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
          </svg>
        </button>
      </div>
      
      <!-- Quick Actions -->
      <div class="flex gap-2 mt-3">
        <button class="text-xs px-3 py-1 bg-secondary-700 hover:bg-secondary-600 rounded-full text-secondary-300 hover:text-white transition-colors" data-translate="FAQ">
          FAQ
        </button>
        <button class="text-xs px-3 py-1 bg-secondary-700 hover:bg-secondary-600 rounded-full text-secondary-300 hover:text-white transition-colors" data-translate="Contact">
          Contact
        </button>
        <button class="text-xs px-3 py-1 bg-secondary-700 hover:bg-secondary-600 rounded-full text-secondary-300 hover:text-white transition-colors" data-translate="Aide">
          Aide
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Live Chat Functionality
  document.addEventListener('DOMContentLoaded', () => {
    const chatToggle = document.getElementById('chat-toggle');
    const chatWindow = document.getElementById('chat-window');
    const chatClose = document.getElementById('chat-close');
    const chatInput = document.getElementById('chat-input');
    const chatSend = document.getElementById('chat-send');
    const chatMessages = document.getElementById('chat-messages');
    
    if (chatToggle && chatWindow && chatClose && chatInput && chatSend && chatMessages) {
      // Toggle chat window
      chatToggle.addEventListener('click', () => {
        chatWindow.classList.toggle('hidden');
        // Remove notification dot when opened
        const notificationDot = chatToggle.querySelector('.animate-pulse');
        if (notificationDot) {
          notificationDot.remove();
        }
      });
      
      // Close chat window
      chatClose.addEventListener('click', () => {
        chatWindow.classList.add('hidden');
      });
      
      // Send message
      const sendMessage = () => {
        const message = chatInput.value.trim();
        if (!message) return;
        
        // Add user message
        addMessage(message, 'user');
        chatInput.value = '';
        
        // Simulate AI response
        setTimeout(() => {
          const aiResponse = generateAIResponse(message);
          addMessage(aiResponse, 'ai');
        }, 1000);
      };
      
      chatSend.addEventListener('click', sendMessage);
      chatInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') sendMessage();
      });
      
             function addMessage(text: string, sender: 'user' | 'ai') {
         const messageDiv = document.createElement('div');
         messageDiv.className = 'flex items-start gap-3';
         
         if (sender === 'user') {
           messageDiv.innerHTML = `
             <div class="flex-1"></div>
             <div class="bg-gradient-to-r from-sensual-500 to-sensual-600 rounded-2xl rounded-tr-md p-4 max-w-xs shadow-lg">
               <p class="text-white text-sm leading-relaxed">${text}</p>
               <div class="text-xs text-sensual-100 mt-2 opacity-75">Maintenant</div>
             </div>
             <div class="w-8 h-8 bg-sensual-500 rounded-full flex items-center justify-center text-white text-sm flex-shrink-0">
               ðŸ‘¤
             </div>
           `;
         } else {
           messageDiv.innerHTML = `
             <div class="w-8 h-8 rounded-full overflow-hidden border-2 border-primary-400 flex-shrink-0">
               <img src="/images/team/Agentchat.png" alt="Sarah" class="w-full h-full object-cover" />
             </div>
             <div class="bg-gradient-to-r from-primary-500 to-primary-600 rounded-2xl rounded-tl-md p-4 max-w-xs shadow-lg">
               <p class="text-white text-sm leading-relaxed">${text}</p>
               <div class="text-xs text-primary-100 mt-2 opacity-75">Maintenant</div>
             </div>
           `;
         }
         
         chatMessages.appendChild(messageDiv);
         chatMessages.scrollTop = chatMessages.scrollHeight;
       }
      
      function generateAIResponse(userMessage: string): string {
        const responses = [
          "Merci pour votre question ! Laissez-moi vous aider avec cela.",
          "C'est une excellente question sur l'exploration Ã©rotique.",
          "Je comprends votre prÃ©occupation. Voici ce que je peux vous dire...",
          "Pour ce type de question, je recommande de consulter nos articles spÃ©cialisÃ©s.",
          "N'hÃ©sitez pas Ã  explorer notre section FAQ pour plus de dÃ©tails.",
          "C'est un sujet important que nous abordons rÃ©guliÃ¨rement sur notre blog.",
          "Je peux vous orienter vers nos ressources sur ce thÃ¨me.",
          "C'est une question frÃ©quente que nous traitons en dÃ©tail.",
          "Laissez-moi vous donner quelques conseils pratiques...",
          "Je vous recommande de consulter nos guides spÃ©cialisÃ©s."
        ];
        return responses[Math.floor(Math.random() * responses.length)];
      }
      
      // Close chat when clicking outside
      document.addEventListener('click', (e) => {
        if (chatWindow && !chatWindow.contains(e.target as Node) && !chatToggle.contains(e.target as Node)) {
          chatWindow.classList.add('hidden');
        }
      });
    }
  });
</script>
